[{"C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\index.js":"1","C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\App.js":"2","C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\reportWebVitals.js":"3","C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\single-photos.js":"4","C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\album.js":"5"},{"size":500,"mtime":1608293389455,"results":"6","hashOfConfig":"7"},{"size":7718,"mtime":1608293389412,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608293389500,"results":"9","hashOfConfig":"7"},{"size":1654,"mtime":1608293389527,"results":"10","hashOfConfig":"7"},{"size":1600,"mtime":1608293389368,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"cikt7z",{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\index.js",[],["24","25"],"C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\App.js",["26","27","28","29","30","31","32"],"import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SinglePhotos from './single-photos';\nimport Album from './album';\n\n\nclass App extends React.Component {\n constructor(){\n   super();\n   this.state = {\n    photos: {},\n    clicked: false,\n    backButton: false,\n    addMore: false\n   }\n  this.handleAlbumClick = this.handleAlbumClick.bind(this);\n  this.handleBackButton = this.handleBackButton.bind(this);\n  this.handleAddMore = this.handleAddMore.bind(this);\n }\n\n  componentDidMount(){\n    /* \n     Here I am fetching the data from the apis.\n     converting the response data into Json string\n     then again parse it because I could not get the \n     object here.\n    */\n    axios.get('https://jsonplaceholder.typicode.com/photos')\n      .then(response => {\n        const res = response.data;\n        const res2 = JSON.stringify(res);\n        var convertedValue = JSON.parse(res2);\n        console.log(\"console: \"+  convertedValue[0].id)\n       \n       /* Saving the json object to the State variable called photos */\n        this.setState({ \n          photos: convertedValue\n       });\n      })\n  }\n  \n\n  /* \n   Click event handle for Album folder\n   @handleAlbumClick()\n   * it takes two param, event and album id\n   * Firstly, I store all the 50 photos in a\n   * class variable called @albumchuk[] \n   * \n   * \n  */\n  albumPhotos = [];\n  albumChunk = [];\n  lastAlbumChunkIndex=10;\n  currentAlbumIndex=1;\n\n  handleAlbumClick(e,id){\n    //console.log(\"album component clicked: \" + id);\n    var size = this.state.photos.length;\n    var count = 0;\n    this.albumChunk = [];\n    this.currentAlbumIndex = id; //this var will need in the render section to show the album id.\n    for(var i=0; i<size; i++){\n        if(this.state.photos[i].albumId == id && count <= 50){\n          this.albumChunk.push(this.state.photos[i]);\n          count = count + 1;\n        }\n        if(count > 50){\n            break;\n        }\n    }\n     //console.log(this.albumChunk)\n       \n     /* \n      * Initially, to show only 10 photos from an album\n      * I just take 10 photos from the variable @albumChunk[]\n      * and to maintain sequence I store the last index in a variable called\n      * @lastAlbumChunkIndex\n      * this.albumPhotos[] is an array object for rendering the album section\n      * <SinglePhotos> a sub-layout component where I created a layout for showing photo and title\n      * \n      * After storing 10 photos I change the state variable called \"clicked\" to true.\n      * It's a state variable to track the click event for album and add more button.\n      * Initial value is false for the @this.state.clicked\n      * \n     */\n     for(var i=0; i < this.lastAlbumChunkIndex; i++){\n      this.albumPhotos.push(<SinglePhotos key={i+Math.floor(Date.now() / 1000)} url={this.albumChunk[i].url} title={this.albumChunk[i].title} id={this.albumChunk[i].id} />)\n     }\n     this.lastAlbumChunkIndex = this.lastAlbumChunkIndex + 10;\n     \n      this.setState({\n       clicked: true\n    });\n  }\n\n  /* \n   * @handleBackButton is used to track click event for Back button\n   * I just maintain a state variable here to change the render()\n  */\n  handleBackButton(e){\n    console.log('back button');\n    this.setState({backButton: true});\n  }\n\n  /* \n   * @handleAddMore() function is going to add 10 more photos \n   * after the album component rendered. \n   * before storing in albumPhotos[] I clean the variable first. \n   * then check the lastAlbumChunkIndex whether it's exceed the upper limit 50 or not. \n   * In that case 60 means, I just make it 10 times then before. \n   * \n  */\n  handleAddMore(e){\n    console.log('add more '+this.lastAlbumChunkIndex);\n    this.albumPhotos = [];\n    if(this.lastAlbumChunkIndex == 60){\n      return false;\n    }\n    for(var i=0; i < this.lastAlbumChunkIndex; i++){\n      this.albumPhotos.push(<SinglePhotos key={i+Math.floor(Date.now() / 1000)} url={this.albumChunk[i].url} title={this.albumChunk[i].title} id={this.albumChunk[i].id} />)\n     }\n     this.lastAlbumChunkIndex = this.lastAlbumChunkIndex + 10;\n     \n     //console.log(this.albumPhotos);\n     \n     this.setState({\n      clicked: true\n   });\n  }\n\n\n  render(){\n    \n    /* \n     * While rendering for the first time my axios api updated the variable \n     * after DOM loading because the JSON response takes some time\n     * that's why to avoid the JSON conversion error or variable undefined error\n     * I used a try-catch block here and make 100 album from the response object.\n     * \n    */\n    try{\n      var albums = [];\n      var prevAlbumId = 0;\n      var currentAlbumId = 0;\n      var isAlbumIdChanged = false;\n\n      var size = this.state.photos.length;\n      for(var i=0; i<size; i++){\n      \n      currentAlbumId = this.state.photos[i].albumId;\n\n      if(prevAlbumId < currentAlbumId){\n          prevAlbumId = currentAlbumId;\n          isAlbumIdChanged = true;\n        }\n\n      /* Storing the photos only when the album has a id with even number (according to the requirement) */\n      if(isAlbumIdChanged && (i % 2 == 0)){\n         isAlbumIdChanged = false;\n        albums.push(<Album key={i + Math.floor(Date.now() / 1000)} onClick={(e, currentAlbumId) => {this.handleAlbumClick(e, currentAlbumId)}} data={this.state.photos}  url={this.state.photos[i].url} albumId={this.state.photos[i].albumId} />) \n       } \n        \n     }\n      //console.log(this.state.photos[1].url)\n    }catch(err){\n      console.log(err);\n      this.albumPhotos = [];\n    }\n   \n    /* \n    * Here I am going to render() conditionally so that I can replace \n    * the album component when the child component clicked. \n    * In the first if block I check whether any click event occured or not. \n    * if occured then either it's from Album click or from the add more button.\n    * \n    */\n    if(this.state.clicked == true){\n      this.state.clicked=false;\n      return (\n        <Container maxWidth=\"md\">\n          <Typography variant=\"h4\" component=\"h4\" align=\"center\">\n            <h3>Album {this.currentAlbumIndex}</h3>\n            <Button variant=\"contained\" color=\"secondary\" onClick={(e) => {this.handleBackButton(e)}}>Back</Button>\n          </Typography>\n          <br/>\n        \n           <Grid \n              container\n              direction=\"row\"\n              justify=\"left\"\n              alignItems=\"flex-start\"\n            > \n            {this.albumPhotos}\n            </Grid>\n\n            <div>\n                <br/>\n                <br/>\n                <Button variant=\"contained\" color=\"primary\" onClick={(e) => {this.handleAddMore(e)}}>Add more</Button>\n                <br/>\n                <br/>\n            </div>\n        </Container>\n      );\n    } \n    else{\n      /* \n       * This render section is for the album \n       * showing 100 albums here.\n       * \n       * I checked also if @this.state.backButton is true or not \n       * I just set everything with initial value.\n      */\n      if(this.state.backButton){\n        this.state.backButton = false;\n        this.albumPhotos=[];\n        this.lastAlbumChunkIndex=10;\n        this.currentAlbumIndex=1;\n      }\n      return (\n        <Container maxWidth=\"md\">\n          <Typography variant=\"h4\" component=\"h4\" align=\"center\">\n            <h3>Gallery</h3>\n          </Typography>\n        \n          <Grid \n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n\n          > \n              {albums}\n          </Grid>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default App;\n","C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\reportWebVitals.js",[],"C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\single-photos.js",[],"C:\\Users\\Mayuri Pandey\\Downloads\\jini-gallery-v2\\jini-gallery-v2\\src\\album.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":69,"column":41,"nodeType":"39","messageId":"40","endLine":69,"endColumn":43},{"ruleId":"41","severity":1,"message":"42","line":92,"column":14,"nodeType":"43","messageId":"44","endLine":92,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":122,"column":33,"nodeType":"39","messageId":"40","endLine":122,"endColumn":35},{"ruleId":"37","severity":1,"message":"38","line":164,"column":37,"nodeType":"39","messageId":"40","endLine":164,"endColumn":39},{"ruleId":"37","severity":1,"message":"38","line":183,"column":27,"nodeType":"39","messageId":"40","endLine":183,"endColumn":29},{"ruleId":"45","severity":1,"message":"46","line":184,"column":7,"nodeType":"47","endLine":184,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":221,"column":9,"nodeType":"47","endLine":221,"endColumn":19},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","Identifier","redeclared","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]